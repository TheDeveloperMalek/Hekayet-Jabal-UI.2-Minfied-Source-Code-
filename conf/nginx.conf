
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on for compression of images;
	gzip on;
    gzip_types image/jpeg image/png image/gif;
    gzip_min_length 1000;
    gzip_comp_level 6;
	
	#----to prevent web attacks----#
	add_header Content-Security-Policy "default-src 'self';";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
	
	#----------http security headers---------#
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    add_header X-Content-Type-Options "nosniff";
	
	#---to prevent insecure tokens---#
	server_tokens off;
	
    server {
        listen       2005 ;
        server_name  localhost;
		
		#----------security section------------#
		http2 on;
		#configuration of ssl
		listen 8080 ssl ;
		ssl_certificate      ../certs/HekayetJabal.crt;
		ssl_certificate_key  ../certs/HekayetJabal.key;
		#additional for ssl
		ssl_protocols TLSv1.3;  # Only allow TLSv1.3 for maximum security
		ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
		ssl_prefer_server_ciphers on;
		
		#------input validation-----#
		if ($request_uri ~* "\.\.+") {
			return 403;
		}
		
		#------------Control the stored cache memory--------------#
		add_header Cache-Control "public, max-age=86400";
		
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   project;
            index  Homepage.html;
        }

        #error_page   404    /404.html;
		
		 error_page   400 /400.html;
        location = /400.html {
            root   project;
        }
		
		 error_page   401  /401.html;
        location = /401.html {
            root   project;
        }
		
		 error_page   403  /403.html;
        location = /403.html {
            root   project;
        }
		
		 error_page   404  /404.html;
        location = /404.html {
            root   project;
        }
		
		 error_page   408  /408.html;
        location = /408.html {
            root   project;
        }
		
		 error_page   413  /413.html;
        location = /413.html {
            root   project;
        }
		
		 error_page   429  /429.html;
        location = /429.html {
            root   project;
        }
		
		 error_page   500  /500.html;
        location = /500.html {
            root   project;
        }
		
		 error_page   502  /502.html;
        location = /502.html {
            root   project;
        }
		
		 error_page   503  /503.html;
        location = /503.html {
            root   project;
        }
		
		 error_page   504  /504.html;
        location = /504.html {
            root   project;
        }
		
		# ------The old syntax that run if the page run in a successfull way and then show content-----
        # redirect server error pages to the static page /50x.html
		
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
         #   root   html;
        #}
		
		
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ /.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ /.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ //.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
		
}